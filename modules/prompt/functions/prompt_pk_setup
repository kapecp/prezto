
# import zsh-vcs-prompt
source ~/.zsh-vcs-prompt/zshrc.sh
ZSH_VCS_PROMPT_ENABLE_CACHING='true'

# Load dependencies.
pmodload 'helper'

function build_prompt_pk {
  echo -n "%B%(!; %{%F{yellow}%}⚡ ;)%(1j. %{%F{cyan}%}%j⚙ .)"
  echo -n "%(!.%{%F{red}%}.%{%F{green}%})%n%{%F{white}%}@%{%F{166}%}%m%{%F{white}%}: %~ $(vcs_super_info)%b"
}

start_time=$SECONDS
function prompt_paradox_preexec {
  start_time=$SECONDS
}

function calc_elapsed_time {
  if [[ $timer_result -ge 3600 ]]; then
    let "timer_hours = $timer_result / 3600"
    let "remainder = $timer_result % 3600"
    let "timer_minutes = $remainder / 60"
    let "timer_seconds = $remainder % 60"
    print -P "%B%F{red}>>> elapsed time ${timer_hours}h${timer_minutes}m${timer_seconds}s%b"
  elif [[ $timer_result -ge 60 ]]; then
    let "timer_minutes = $timer_result / 60"
    let "timer_seconds = $timer_result % 60"
    print -P "%B%F{yellow}>>> elapsed time ${timer_minutes}m${timer_seconds}s%b"
  elif [[ $timer_result -gt 10 ]]; then
    print -P "%B%F{green}>>> elapsed time ${timer_result}s%b"
  fi
}

function prompt_paradox_precmd {
  setopt LOCAL_OPTIONS
  unsetopt XTRACE KSH_ARRAYS

  # timer
  timer_result=$(($SECONDS-$start_time))
  if [[ $timer_result -gt 10 ]]; then
    calc_elapsed_time
  fi
  start_time=$SECONDS

  # make the horizontal line
  local the_date=${#${(%):-%D{%L:%M:%S}}}
  local last_command_status
  (( last_command_status = 1 ))
  local i_filler
  i_filler=$(( $COLUMNS - $last_command_status - $the_date - 7 )) # 7 is space required for exit value + some space
  filler="%{%F{240}%}${(l:${i_filler}::-:)}" # 240 is gray
}

function prompt_paradox_setup {
  setopt LOCAL_OPTIONS
  unsetopt XTRACE KSH_ARRAYS
  prompt_opts=(cr percent subst)

  setopt promptsubst

  # Load required functions.
  autoload -Uz add-zsh-hook

  # Add hook for calling git-info before each command.
  add-zsh-hook preexec prompt_paradox_preexec
  add-zsh-hook precmd prompt_paradox_precmd

  zstyle ':prezto:module:editor:info:completing' format '%B%F{red}...%f%b'
  zstyle ':prezto:module:editor:info:keymap:primary' format '%B%F{blue}❯%f%b'
  zstyle ':prezto:module:editor:info:keymap:primary:overwrite' format '%F{red}♺%f'
  zstyle ':prezto:module:editor:info:keymap:alternate' format '%B%F{red}❮%f%b'

  # Define prompts.
  PROMPT=' %(?.%{%F{green}%}✓.%{%F{red}%}✘) $filler %D{%K:%M:%S}
%{%f%b%k%}$(build_prompt_pk)
 ${editor_info[keymap]} '
  #RPROMPT='[%D{%L:%M:%S %p}]'
  SPROMPT='zsh: correct %F{red}%R%f to %F{green}%r%f [nyae]? '
}

prompt_paradox_setup "$@"
